spring.application.name=authserver
# Basic configuration for auth server
server.port=9000
logging.level.org.springframework.security=DEBUG
#spring.security.user.name=user
#spring.security.user.password=password
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id="oidc-client"
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret="{noop}secret"
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods="client_secret_basic"
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types="authorization_code","refresh_token"
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris="http://127.0.0.1:8080/login/oauth2/code/oidc-client"
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris="http://127.0.0.1:8080/"
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes="openid", "profile"
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true

#spring:
#security:
#oauth2:
#client:
    #registration:
        #client-a:
            #provider: spring
            #client-id: client-a
            #client-secret: secret
            #authorization-grant-type: authorization_code
            #redirect-uri: "http://127.0.0.1:8080/authorized"
            #scope: scope-a
    #provider:
        #spring:
            #issuer-uri: http://localhost:9000

rsa.private-key: classpath:certs/private.pem
rsa.public-key: classpath:certs/public.pem
spring.security.oauth2.resourceserver.jwt.jws-algorithms=RS512
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000
